Ansible helps us to automate the process

Chef & Puppet works on PULL mechanism
Ansible works on PUSH mechanism

PULL mechanism works on the principle of checking the configuration information from the central server (Ansible VM)
Central server pushes the configuration information on target servers on immediate basis

Ansible uses playbooks to automate deployment, manage, build, test and configure


How ansible main server will be connecting to the worker nodes?
	- by using SSH connection

Ansible Main Components;
1. Playbook
2. Inventory file - all the worker node information will be available in the Inventory File

Ansible Server - used to communicate with Worker Nodes and install packages, deployments..
Worker Node takes the commands from Ansible Server and works according to it


Methods of working with ansible
1. Adhoc Commands - these are simple Linux commands used for temporary works. These commands will be over-rider and cannot be reused
2. Modules
3. Playbook

1. Adhoc Commands - these are simple Linux commands used for temporary works. These commands will be over-rider and cannot be reused

ansible all -a "systemctl status apache2"

Ex:-SHELL, COMMAND, RAW

2.Modules:-

modules are buliding blocks of ansible
modules works on key value pairs

-------------Categories of Ansible Modules-------------

System modules
Package Management modules
File & Directory Modules
Command Execution modules
Networking & Security modules
Cloud providers modules
database modules


adhoc & module commands

ansible all -m yum -a "name=git state=present" --become
ansible all -m apt -a "name=git state=present" --become
ansible all -m copy -a "src=app.py dest=/tmp"

start/stop/restart

ansible all -m service -a "name=httpd state=started" 

Playbooks
=========================

playbook is collection of multiple modules
we cane run multiple modules at a time using playbooks
we can always reuse the playbooks at any time


yml file:-

---
- hosts: all
  become: yes
  tasks:
   - name: Install httpd
     yum: name=httpd state=present

   - name: Start httpd
     service: name=httpd state=started

   - name: User creation
     user: name=vk67220 state=present

   - name: Copy file
     copy: src=/root/demo.py dest=/root
...





